// <auto-generated />
using InstaChef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InstaChef.Migrations
{
    [DbContext(typeof(InstaChefDbContext))]
    [Migration("20241207185347_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InstaChef.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "marga18nins@gmail.com",
                            FirstName = "Niña Margarette",
                            LastName = "Catubig",
                            Password = "testing",
                            Status = 1,
                            Username = "cuteko"
                        },
                        new
                        {
                            Id = 2,
                            Email = "francischavez@gmail.com",
                            FirstName = "Francis Benedict",
                            LastName = "Chavez",
                            Password = "testing2",
                            Status = 1,
                            Username = "benedict"
                        },
                        new
                        {
                            Id = 3,
                            Email = "paulabellana@gmail.com",
                            FirstName = "Paul Thomas",
                            LastName = "Abellana",
                            Password = "testing3",
                            Status = 1,
                            Username = "thomas"
                        },
                        new
                        {
                            Id = 4,
                            Email = "morielbien@gmail.com",
                            FirstName = "Moriel",
                            LastName = "Bien",
                            Password = "testing4",
                            Status = 1,
                            Username = "bien"
                        });
                });

            modelBuilder.Entity("InstaChef.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Baking",
                            Name = "Flour"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Baking",
                            Name = "Sugar"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Dairy",
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Dairy",
                            Name = "Butter"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Vegetables",
                            Name = "Tomatoes"
                        });
                });

            modelBuilder.Entity("InstaChef.Models.Pantry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Pantry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            IngredientId = 3
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 2,
                            IngredientId = 5
                        });
                });

            modelBuilder.Entity("InstaChef.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CookingDifficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("CuisineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<int>("ServingCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookingDifficulty = "Beginner",
                            CreatorId = 1,
                            CuisineType = "American",
                            MealType = "Breakfast",
                            Name = "Pancakes",
                            Preparation = "Mix ingredients and cook on a skillet until golden brown.",
                            PreparationTime = 20,
                            ServingCount = 4
                        },
                        new
                        {
                            Id = 2,
                            CookingDifficulty = "Intermediate",
                            CreatorId = 2,
                            CuisineType = "Italian",
                            MealType = "Lunch",
                            Name = "Tomato Soup",
                            Preparation = "Blend tomatoes and simmer with spices.",
                            PreparationTime = 30,
                            ServingCount = 3
                        });
                });

            modelBuilder.Entity("InstaChef.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 1,
                            Quantity = 2.0,
                            RecipeId = 1,
                            Unit = "cups"
                        },
                        new
                        {
                            Id = 2,
                            IngredientId = 2,
                            Quantity = 0.5,
                            RecipeId = 1,
                            Unit = "cups"
                        },
                        new
                        {
                            Id = 3,
                            IngredientId = 3,
                            Quantity = 2.0,
                            RecipeId = 1,
                            Unit = "pieces"
                        },
                        new
                        {
                            Id = 4,
                            IngredientId = 5,
                            Quantity = 4.0,
                            RecipeId = 2,
                            Unit = "pieces"
                        });
                });

            modelBuilder.Entity("InstaChef.Models.Ingredient", b =>
                {
                    b.HasOne("InstaChef.Models.Pantry", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("IngredientId");
                });

            modelBuilder.Entity("InstaChef.Models.Pantry", b =>
                {
                    b.HasOne("InstaChef.Models.Account", "Account")
                        .WithMany("Pantries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("InstaChef.Models.Recipe", b =>
                {
                    b.HasOne("InstaChef.Models.Account", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("InstaChef.Models.RecipeIngredient", b =>
                {
                    b.HasOne("InstaChef.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InstaChef.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("InstaChef.Models.Account", b =>
                {
                    b.Navigation("Pantries");
                });

            modelBuilder.Entity("InstaChef.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("InstaChef.Models.Pantry", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("InstaChef.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
